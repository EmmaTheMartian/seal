#!/usr/bin/env lua

local lfs = require 'lfs'
local argparse = require 'argparse'

local parser = argparse('seal', 'A metaprogrammable markup language designed for making simple websites.')
parser:argument('input', 'Input directory')
parser:option('-o --output', 'Output directory', 'output')
parser:option('-s --seal', 'Require path for seal, used for development', 'seal')
local args = parser:parse()

local seal = require(args.seal)

package.path = args.input .. '/?.lua;' .. package.path
conf = require('conf')

local function recursive_mkdir(path)
	local seen = ''
	for subpath in path:gmatch('(.*)/') do
		seen = seen .. subpath
		lfs.mkdir(seen)
	end
end

print ': Compiling...'
for input_file, output_file in pairs(conf) do
	print('  ' .. input_file)

	local text = seal.compile(args.input .. '/' .. input_file)

	if text then
		local path = args.output .. '/' .. output_file
		local dir, _ = path:match('(.*/)(.*)')
		recursive_mkdir(dir)

		local f = io.open(path, 'w')
		if f == nil then
			print('Error: Failed to open file `' .. path .. '`')
			os.exit(1)
		end
		f:write(text)
		f:close()
	end
end
print ': Done'
